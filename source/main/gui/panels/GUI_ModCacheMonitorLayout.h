#pragma once

// ----------------------------------------------------------------------------
// Generated by MyGUI's LayoutEditor using RoR's code templates.
// Find the templates at [repository]/tools/MyGUI_LayoutEditor/
//
// IMPORTANT:
// Do not modify this code directly. Create a derived class instead.
// ----------------------------------------------------------------------------

#include "ForwardDeclarations.h"
#include "BaseLayout.h"

namespace RoR
{

namespace GUI
{
	
ATTRIBUTE_CLASS_LAYOUT(ModCacheMonitorLayout, "ModCacheMonitor.layout");
class ModCacheMonitorLayout : public wraps::BaseLayout
{

public:

	ModCacheMonitorLayout(MyGUI::Widget* _parent = nullptr);
	virtual ~ModCacheMonitorLayout();

protected:

	//%LE Widget_Declaration list start
	ATTRIBUTE_FIELD_WIDGET_NAME(ModCacheMonitorLayout, m_ModCacheMonitor, "ModCacheMonitor");
	MyGUI::Window* m_ModCacheMonitor;

	ATTRIBUTE_FIELD_WIDGET_NAME(ModCacheMonitorLayout, m_info_1, "info_1");
	MyGUI::TextBox* m_info_1;

	ATTRIBUTE_FIELD_WIDGET_NAME(ModCacheMonitorLayout, m_info_2, "info_2");
	MyGUI::TextBox* m_info_2;

	ATTRIBUTE_FIELD_WIDGET_NAME(ModCacheMonitorLayout, m_label_1, "label_1");
	MyGUI::TextBox* m_label_1;

	ATTRIBUTE_FIELD_WIDGET_NAME(ModCacheMonitorLayout, m_label_2, "label_2");
	MyGUI::TextBox* m_label_2;

	//%LE Widget_Declaration list end
};

} // namespace GUI

} // namespace RoR

