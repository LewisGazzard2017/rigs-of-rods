{
    "nodes": [
        {
            "pos_x": -429.0,
            "pos_y": -154.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 24,
            "type_id": 1,
            "softbody_node_id": 29
        },
        {
            "pos_x": 223.0,
            "pos_y": -190.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 464.0,
            "user_size_y": 580.0,
            "id": 26,
            "type_id": 4,
            "source_code": "float Delta(int slot, int idx) {\n   return Read(slot, idx)-Read(slot,idx-1);\n}\n\nvoid WriteDDiff(int sIn, int sOut) {\n    Write(sOut,  Delta(sIn,0));\n    Write(sOut+1,Delta(sIn,0)-Delta(sIn,-1));\n}\n\nfloat DAvg(int slot, int idx) {\n    return (Delta(slot, idx) + Delta(slot, idx-1)) / 2.0;\n}\n\nfloat DAvg10(int slot, int idx) {\n   float d0 = DAvg(slot, idx);\n   float d1 = DAvg(slot, idx-1);\n   float d2 = DAvg(slot, idx-2);\n   float d3 = DAvg(slot, idx-3);\n   float d4 = DAvg(slot, idx-4);\n   float d5 = DAvg(slot, idx-5);\n   float d6 = DAvg(slot, idx-6);\n   float d7 = DAvg(slot, idx-7);\n   float d8 = DAvg(slot, idx-8);\n   float d9 = DAvg(slot, idx-9);\n   return (d0+d1+d2+d3+d4+d5+d6+d7+d8+d9)/10.0;\n}\n\n// --------\nint srcX=0, srcY=1;\n\nvoid step() {\n    WriteDDiff(srcX,0); // Dx=0 DDx=2\n    WriteDDiff(srcY,2); // Dy=0 DDy=3\n\n    Write(4, DAvg10(srcX, 0)); // Delta scroll X\n    Write(5, DAvg10(srcY, 0)); // Delta scroll Y\n\n   \n\n}"
        },
        {
            "pos_x": 896.0,
            "pos_y": 8.0,
            "arranged_pos_x": 60.0,
            "arranged_pos_y": 282.0,
            "user_size_x": 246.0,
            "user_size_y": 216.0,
            "id": 27,
            "type_id": 8,
            "zoom": 200000.0,
            "grid_size": 0.00009999999747378752
        },
        {
            "pos_x": 888.0,
            "pos_y": 310.0,
            "arranged_pos_x": 72.0,
            "arranged_pos_y": 720.0,
            "user_size_x": 224.0,
            "user_size_y": 206.0,
            "id": 28,
            "type_id": 8,
            "zoom": 400000.0,
            "grid_size": 0.0003000000142492354
        },
        {
            "pos_x": 896.0,
            "pos_y": -282.0,
            "arranged_pos_x": 62.0,
            "arranged_pos_y": 70.0,
            "user_size_x": 242.0,
            "user_size_y": 200.0,
            "id": 29,
            "type_id": 8,
            "zoom": 200000.0,
            "grid_size": 0.00009999999747378752
        },
        {
            "pos_x": -186.0,
            "pos_y": -79.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 310.0,
            "user_size_y": 592.0,
            "id": 30,
            "type_id": 4,
            "source_code": "float AvgPrev(int src, int pos) {\n  return (Read(src,pos)\n     +Read(src,pos-1))/2.0;\n}\n\nfloat Avg(int src, int pos, int count){\n float total=0;\n for (int i=0;i<count;++i){\n  total += AvgPrev(src,pos-i);\n }\n float fcount = count;\n return total/fcount;\n}\n\n// -------------------------------------\nint srcX=0, srcY=1, dstAvgX=0,dstAvgY=1;\nvoid step() {\n\n    Write(dstAvgX, Avg(srcX,0,20));\n    Write(dstAvgY, Avg(srcY,0,20));\n\n\n\n   Write(8,0.0); // constant 0\n}"
        }
    ],
    "links": [
        {
            "node_src_id": 24,
            "node_dst_id": 30,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 26,
            "node_dst_id": 27,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 26,
            "node_dst_id": 27,
            "slot_src": 2,
            "slot_dst": 1
        },
        {
            "node_src_id": 26,
            "node_dst_id": 28,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 26,
            "node_dst_id": 28,
            "slot_src": 3,
            "slot_dst": 1
        },
        {
            "node_src_id": 30,
            "node_dst_id": 28,
            "slot_src": 8,
            "slot_dst": 4
        },
        {
            "node_src_id": 30,
            "node_dst_id": 28,
            "slot_src": 8,
            "slot_dst": 5
        },
        {
            "node_src_id": 26,
            "node_dst_id": 27,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 26,
            "node_dst_id": 27,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 26,
            "node_dst_id": 27,
            "slot_src": 5,
            "slot_dst": 3
        },
        {
            "node_src_id": 26,
            "node_dst_id": 27,
            "slot_src": 4,
            "slot_dst": 2
        },
        {
            "node_src_id": 26,
            "node_dst_id": 29,
            "slot_src": 5,
            "slot_dst": 1
        },
        {
            "node_src_id": 26,
            "node_dst_id": 29,
            "slot_src": 4,
            "slot_dst": 0
        },
        {
            "node_src_id": 26,
            "node_dst_id": 29,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 26,
            "node_dst_id": 29,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 24,
            "node_dst_id": 26,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 24,
            "node_dst_id": 26,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 24,
            "node_dst_id": 30,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 30,
            "node_dst_id": 26,
            "slot_src": 0,
            "slot_dst": 2
        },
        {
            "node_src_id": 30,
            "node_dst_id": 26,
            "slot_src": 1,
            "slot_dst": 3
        }
    ],
    "udp_pos_node": {
        "pos_x": -2044.0,
        "pos_y": 399.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483646,
        "type_id": 7
    },
    "udp_acc_node": {
        "pos_x": -1998.0,
        "pos_y": 511.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483644,
        "type_id": 7
    },
    "udp_orient_node": {
        "pos_x": -2154.0,
        "pos_y": 565.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483643,
        "type_id": 7
    },
    "udp_velo_node": {
        "pos_x": -2138.0,
        "pos_y": 471.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483645,
        "type_id": 7
    }
}